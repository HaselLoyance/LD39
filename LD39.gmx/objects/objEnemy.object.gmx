<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemyRun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerCollision</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sname = part_system_create();
part_system_depth(Sname, -2999)
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_flare);
part_type_size(particle1,0.10,0.30,0,0);
part_type_scale(particle1,1,1);
part_type_color2(particle1,65535,33023);
part_type_alpha1(particle1,1);
part_type_speed(particle1,0.70,1,0,0);
part_type_direction(particle1,0,359,0,0);
part_type_gravity(particle1,0.1,270);
part_type_orientation(particle1,0,0,0,0,1);
part_type_blend(particle1,0);
part_type_life(particle1,250,300);
emitter1 = part_emitter_create(Sname);


image_speed = 1/room_speed * 3;
_direction = -1;
moveSpeed = 2;
_gravity = 0.27;
_hspeed = 0;
_vspeed =0;
isDead = false;
animStarted = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    for(i = 0; i &lt; 150; i++)
    {
        blood = instance_create(x,y,objBloodDark);
    }

    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_hspeed = _direction * moveSpeed;
_vspeed += _gravity;

if(isDead &amp;&amp; !animStarted)
{
    
    if (!audio_is_playing(sndZap))
    {
        audio_play_sound(sndZap,0,false);
    }
    animStarted = true;
    alarm[0] = 20;
}

    
if (place_meeting(x+_hspeed,y,objCollider))
{
    while(!place_meeting(x+sign(_hspeed),y,objCollider))
    {
        x += sign(_hspeed);
    }
    _hspeed = 0;
    _direction *= -1;
}

if (place_meeting(x+_hspeed,y,objEnemyFallCollider))
{
    while(!place_meeting(x+sign(_hspeed),y,objEnemyFallCollider))
    {
        x += sign(_hspeed);
    }
    _hspeed = 0;
    _direction *= -1;
}

x += _hspeed;

if (place_meeting(x,y+_vspeed,objCollider))
{
    while(!place_meeting(x,y+sign(_vspeed),objCollider))
    {
        y += sign(_vspeed);
    }
    _vspeed = 0;
}
y += _vspeed;

image_xscale = _direction;

if (place_meeting(x,y,objPlayer))
{
    scrDie();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (instance_exists(objFlashlight))
{
    if(isDead)
    {
part_emitter_region(Sname,emitter1,x,x,y,y,ps_shape_ellipse,1);
        part_emitter_burst(Sname,emitter1,particle1,1);
        draw_line_width_colour(x,y,objFlashlight.x,objFlashlight.y, 3, c_orange,c_yellow);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
