<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFlashlight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activateDeathAnim = false;
spawned = false;
landed = false;
maxCharge = 300;
currentCharge = maxCharge;
blackAlpha = 0.8;
transformator = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objPlayer) &amp;&amp; !objPlayer.isDead)
{
blackAlpha = 0.8;
}
else
{
blackAlpha = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (activateDeathAnim)
{
    image_angle+=10;
}

if (instance_exists(objPlayer))
{
    keyAttack = keyboard_check_pressed(ord("Z"));
    
    if (keyAttack &amp;&amp; !objPlayer.onCheckpoint &amp;&amp; currentCharge&gt; 2)
    {
        if (!audio_is_playing(sndLight))
        {
            audio_play_sound(sndLight,0,false);
        }
        currentCharge -= 60;
        alarm[0] = 20;
        blackAlpha = 0;
        if (instance_exists(objEnemy))
        {
            with (objEnemy)
            {
                if (distance_to_object(objPlayer) &lt; 250)
                {
                    
                    isDead = true;
                }
            }
        }
        
        if (instance_exists(objBoss))
        {
            with (objBoss)
            {
                if (distance_to_object(objPlayer) &lt; 250)
                {
                   event_user(0);
                }
            }
        }
    }
    
    if (keyAttack &amp;&amp; objPlayer.onCheckpoint)
    {
        if (!audio_is_playing(sndSave))
        {
            audio_play_sound(sndSave,0,false);
        }
        transformator.image_speed = 0;
        transformator.sprite_index = sprTransformatorActive;
        transformator.alarm[0] = -1;
        transformator.alarm[1] = 50;
        global.checkpointRoom = room;
        global.checkpointX = objPlayer.x;
        global.checkpointY = objPlayer.y;
    }
    
    x = objPlayer.x;
    y = objPlayer.y;
    image_xscale = objPlayer.image_xscale;
    if (!objPlayer.onCheckpoint &amp;&amp; !objPlayer.isDead)
    {
        currentCharge--;
    }
    
    if (global.infiniteCharge)
    {
        currentCharge = maxCharge;
    }
    
    if (currentCharge &lt;= 0 &amp;&amp; !objPlayer.isDead)
    {
        if (!global.invincible)
        {
        blackAlpha = 1;
        }
        scrDie();
    }
}
else
{
    activateDeathAnim = true;
}


if (activateDeathAnim &amp;&amp; !spawned)
{
    spawned = true;
    direction = 90;
    speed = 7;
    gravity = 0.2;
}

if (place_meeting(x,y,objCollider))
{
    if (activateDeathAnim)
    {
        activateDeathAnim = false;
        gravity = 0;
        speed = 0;
    }
}

if (y &gt; 600)
{
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if (room != rLevel5)
{
draw_sprite_ext(sprFlashlightBlack, 0,x,y, image_xscale,1,0,c_white,blackAlpha);

draw_set_colour(c_white);
draw_rectangle(view_xview[0] + 32,view_yview[0]+40, view_xview[0] + 32 + 256, view_yview[0] +40 + 16,false);

draw_set_colour(make_colour_rgb(228,215,14));
if (currentCharge &lt; 0)
{
    currentCharge = 0;
}
draw_rectangle(view_xview[0] + 36,view_yview[0]+44, view_xview[0] + 36 + 248 * (currentCharge/maxCharge),view_yview[0]+44+8,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
