<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoss</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sname = part_system_create();
part_system_depth(Sname, -2999)
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_flare);
part_type_size(particle1,0.20,0.50,0,0);
part_type_scale(particle1,1,1);
part_type_color2(particle1,65535,33023);
part_type_alpha1(particle1,1);
part_type_speed(particle1,0.70,1,0,0);
part_type_direction(particle1,0,359,0,0);
part_type_gravity(particle1,0.07,270);
part_type_orientation(particle1,0,0,0,0,1);
part_type_blend(particle1,0);
part_type_life(particle1,40,60);
emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x,x,y,y,ps_shape_ellipse,1);

t = -1;
hp = 20;
damageTake = false;
iFrame = false;
phase = 0;
image_speed = 1/60 * 2;

            instance_create(x,y,objShaker);
infiniteChargeStat = global.infiniteCharge;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(Sname);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>damageTake = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iFrame = false;
image_alpha = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objBoss</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer) &amp;&amp; !objPlayer.isDead)
{
    if (place_meeting(x,y,objPlayer))
    {
        scrDie();
    }
    
    if (hp &gt; 15 &amp;&amp; phase == 0)
    {
        if (t == 0)
        {
            hspeed = 10;
            audio_play_sound(choose(sndBossAttack1_1,sndBossAttack1_2),0,false);
            with(objShaker)
            {
                p = 5;
            }
        }
        
        if (t == 98)
        {
            audio_play_sound(choose(sndBossAttack1_1,sndBossAttack1_2),0,false);
            with(objShaker)
            {
                p = 5;
            }
            hspeed = -10;
            t = -98;
        }
    }
    
    if (x &lt; -250 || x &gt; 790)
    {
        hspeed = 0;
    }
    
    if (hp &gt; 10 &amp;&amp; hp &lt;= 15 &amp;&amp; phase == 0 &amp;&amp; (x &lt; -250 || x &gt; 790))
    {
        phase = 1;
        t = -1;
    }
    
    if (hp &gt; 10 &amp;&amp; hp &lt;= 15 &amp;&amp; phase == 1)
    {
        if (y &gt; 480)
        {  
            with(objShaker)
            {
                d = 0.2;
                p = 8;
            }
            audio_play_sound(choose(sndBossAttack2_1,sndBossAttack2_2),0,false);
            t = -1;
        }
        
        if (x&gt;768)
           _direction = 135;
        else if (x &lt; -200)
           _direction = 45;
           
        if (t == -1)
        {
            direction = _direction;
            speed = 6;
        }
        
        if (t == 30)
        {
            direction = _direction + (sign(_direction-90) * 90);
            speed = 6;
        }
    }
    
    if (hp &gt; 5 &amp;&amp; hp &lt;= 10 &amp;&amp; phase == 1)
    {
        global.infiniteCharge = true;
        direction = 0;
        speed = 0;
        phase = 2;
        t = -1;
        gravity = 1;
        hspeed = 0;
        vspeed =0;
    }
    
    if (hp &gt; 5 &amp;&amp; hp &lt;= 10 &amp;&amp; phase == 2)
    {   
        if (t &gt; 60)
        {
            objFlashlight.blackAlpha = 0;
            image_angle += 10;
        }
        if (t == 60)
        {
            with (objTransformator)
            {
                instance_destroy();
            }
            depth = -25;
            gravity = 0.5
            speed = 0;
            with(objBossBorder)
            {
                image_index = 1;
            }
            background_index[0] = bgBossRed;
            sprite_index = sprBossRed;
            
            with(objShaker)
            {
                d = 0.1;
                p = 8;
            }
            audio_play_sound(sndDestroy,0,false);
            objDestr.active = true;
            x = room_width/2;
            y = -200;
        }
        
        if (t == 100 )
        {
            gravity = 0;
            speed = 0;
        }
        if (t &gt;= 120)
        {
            with(objShaker)
            {
                p = 2;
            }
        }
        if (t&gt;=200 &amp;&amp; t mod 6 == 0)
        {
            instance_create(x,y,objBossRock);
        }
        if (t &gt;= 200 &amp;&amp; t mod 120 == 0)
        {
            s1 = instance_create(208,496,objBossSpike);
            s1.mode = 1;
            s1.speedMp = -1;
            s1.yStart = s1.y -32;
            
            s2 = instance_create(560,496,objBossSpike);
            s2.mode = 1;
            s2.yStart = s2.y -32;
        }
    }
    
    if (hp &gt; 0 &amp;&amp; hp &lt;= 5 &amp;&amp; phase == 2)
    {
        if (instance_exists(objBossRock))
        {
            with (objBossRock)
            {
                mode = 1;
            }
        }
        t = (t mod 120);
        phase = 3;
    }
    
    if (hp &gt; 0 &amp;&amp; hp &lt;= 5 &amp;&amp; phase == 3)
    {
        objFlashlight.blackAlpha = 0;
        image_angle += 10;
        
        with(objShaker)
        {
            p = 4;
        }
        if (t mod 8 == 0)
        {  
           r = instance_create(x,y,objBossRock);
           r.mode = 1;
        }
        
        if (t mod 120 == 0)
        {
            s1 = instance_create(208,496,objBossSpike);
            s1.mode = 1;
            s1.speedMp = -1;
            s1.yStart = s1.y -32;
            
            s2 = instance_create(560,496,objBossSpike);
            s2.mode = 1;
            s2.yStart = s2.y -32;
        }
    }
    
    if (hp &lt;= 0 &amp;&amp; phase == 3)
    {
        
        with(objShaker)
        {
            p = 12;
            d = -0.2;
        }
        if (instance_exists(objBossSpike))
        {
            with (objBossSpike)
                 instance_destroy();
        }
        
        if (instance_exists(objBossRock))
        {
            with (objBossRock)
                 instance_destroy();
        }
        
        objPlayer.freeze = true;
        phase = 4;
        t = 0;
    }
    
    if (hp &lt;= 0 &amp;&amp; phase ==4)
    {  
        
        if (t mod 1 == 0)
        {
            f = instance_create(x,y,objFlake);
            f.direction = random(360);
            s = random_range(0.5,3);
            f.image_xscale =s;
            f.image_yscale = s;
            f.speed = random_range(7,10);
        }
        
        if (t == 180)
        {
            instance_create(0,0,objBossTransition);
        }
        image_angle += 30;
        objFlashlight.blackAlpha = 0;
    }
    t++;
}
else
{
    if (phase&gt;=2)
    {
        objFlashlight.blackAlpha = 0;
    }
    global.infiniteCharge = infiniteChargeStat;
    speed = 0;
    gravity = 0;
    direction = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///take damege
if (!iFrame)
{

    
    if (!audio_is_playing(sndBossZap))
    {
        audio_play_sound(sndBossZap,0,false);
    }
damageTake = true;
hp -= 1;
iFrame = true;
image_alpha = 0.5;
alarm[0] = 60;
alarm[1] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (instance_exists(objFlashlight))
{
    if(damageTake)
    {
        part_emitter_burst(Sname,emitter1,particle1,2);
        if (sprite_index == sprBossRed)
        {
     part_emitter_region(Sname,emitter1,x-4,x+4,y-4,y+4,ps_shape_ellipse,1);
            draw_line_width_colour(x,y,objFlashlight.x,objFlashlight.y, 8, c_orange,c_yellow);
        }
        else
        {
            draw_line_width_colour(x+sprite_width/2,y-sprite_height/2,objFlashlight.x,objFlashlight.y, 8, c_orange,c_yellow);
            
     part_emitter_region(Sname,emitter1,x-4+sprite_width/2,x+4+sprite_width/2,y-4 - sprite_height/2,y+4 - sprite_height/2,ps_shape_ellipse,1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
